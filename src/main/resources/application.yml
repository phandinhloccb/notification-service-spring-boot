spring:
  application:
    name: notification-service

  # kafka
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      group-id: notification-service
      properties:
        schema.registry.url: http://localhost:8085
        specific.avro.reader: true
    input:
      topic:
        order-completed: orders.order.completed.v1
  
  # Email Configuration
  mail:
    host: sandbox.smtp.mailtrap.io
    port: 587
    username: xx
    password: xx
    from: "noreply@yourcompany.com" 
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
        debug: false


server: 
  port: 8088


# Spring Boot Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus  # Explicitly include metrics and prometheus
      base-path: ""
  endpoint:
    health:
      enabled: true
      show-details: always
      probes:
        enabled: true
    metrics:
      enabled: true  # Explicitly enable metrics
    prometheus:
      enabled: true  # Explicitly enable prometheus
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
    mongo:
      enabled: true
  server:
    port: 8088
  metrics:
    export:
      prometheus:
        enabled: true  # Enable Prometheus metrics export